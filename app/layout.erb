<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
    "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">

<head>
  <title>InventoryDemo</title>
  <% if Rho::System.platform == 'SAILFISH' %>
    <meta name="viewport" content="width=device-width/2, initial-scale=2.0, maximum-scale=2.0, user-scalable=0"/>
  <% else %>
    <meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=0"/>
  <% end %>
  <link rel="stylesheet" href="/public/libs/font-awesome-4.7.0/css/font-awesome.min.css">
  <link rel="stylesheet" href="/public/libs/bootstrap-3.3.7/css/bootstrap.min.css">
  <link rel="stylesheet" href="/public/libs/toastr/toastr.min.css">
  <link rel="stylesheet" href="/public/css/style.css">

  <script type="text/javascript" src="/public/libs/jquery/jquery-3.1.1.min.js"></script>
  <script type="text/javascript" src="/public/js/jquery-extensions.js"></script>

  <script type="text/javascript" src="/public/libs/bootstrap-3.3.7/js/bootstrap.min.js"></script>
  <script type="text/javascript" src="/public/libs/spinner/spinner.js"></script>
  <script type="text/javascript" src="/public/libs/toastr/toastr.min.js"></script>

  <script type="text/javascript" src="/public/libs/poller/poller.js"></script>

</head>

<body>

<div class="container-fluid">
  <%= @content %>
</div>

<script>
    $("body").on("onSyncSourceInProgress", function (event, sourceName) {
        console.log("onSyncSourceInProgress");
        $("#sync-status .source-name").text(sourceName);

    });

    $("body").on("onSyncSourceCompleted", function (event, sourceName) {
        console.log("onSyncSourceCompleted");
        $("#sync-status .source-name").text("");
    });


    $("body").on("onSyncStarted", function (event) {
        console.log("onSyncStarted");
        $("#sync-status .source-name").text("");
        $("#sync-status .state").text("Syncing");
        $("#sync-status .spinner").removeClass("hidden");
        $("#sync-status .check").addClass("hidden");
        $("#sync-status .warning").addClass("hidden");
    });

    $("body").on("onSyncCompleted", function (event, createdAt) {
        console.log("onSyncCompleted");
        $("#sync-status .source-name").text("");
        $("#sync-status .state").text("Last Sync: " + createdAt);
        $("#sync-status .spinner").addClass("hidden");
        $("#sync-status .check").removeClass("hidden");
        $("#sync-status .warning").addClass("hidden");
    });

    $("body").on("onSyncError", function (event, description) {
        console.log("onSyncError");
        $("#sync-status .state").text("Sync error: " + description);
        $("#sync-status .spinner").addClass("hidden");
        $("#sync-status .check").addClass("hidden");
        $("#sync-status .warning").removeClass("hidden");
    });

    $("body").on("onSyncHasNotHappenedYet", function (event) {
        console.log("onSyncHasNotHappenedYet");
        $("#sync-status .source-name").text("");
        $("#sync-status .state").text("Never synced yet");
        $("#sync-status .spinner").addClass("hidden");
        $("#sync-status .check").addClass("hidden");
        $("#sync-status .warning").removeClass("hidden");
    });

    $(function (event) {

        var interval = setInterval(function () {

            $.getJSON("<%= url_for(:controller => :State, :action => :state) %>")
                .done(function (json) {

                    console.log("Done json", json);

                    if (json.rhoConnect.logged) {
                        $('body').trigger('onRhoConnectLoggedIn');
                    }

                    if (json.rhoConnect.sync == null) {
                        $('body').trigger('onSyncHasNotHappenedYet');
                    } else {


                        if (json.rhoConnect.sync.state == 'start') {
                            $('body').trigger('onSyncStarted');
                        }

                        if (json.rhoConnect.sync.state == 'in_progress') {
                            $('body').trigger('onSyncSourceInProgress', json.rhoConnect.sync.sourceName);
                        }

                        if (json.rhoConnect.sync.state == 'ok') {
                            $('body').trigger('onSyncSourceCompleted', json.rhoConnect.sync.sourceName);
                        }

                        if (json.rhoConnect.sync.state == 'complete') {
                            $('body').trigger('onSyncCompleted', json.rhoConnect.sync.timestamp);
                        }

                        if (json.rhoConnect.sync.state == 'error') {
                            $('body').trigger('onSyncError', json.rhoConnect.sync.description);
                        }
                    }

                })
                .fail(function () {
                    console.log("Fail");
                })
                .always(function () {
                    console.log("Always");
                });
        }, 1000);


    });


</script>

</body>

</html>
